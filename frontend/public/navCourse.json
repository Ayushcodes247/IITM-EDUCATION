[
    {
       "id": "mern",
       "path": "/course/mern",
       "title": "MERN Stack Development",
       "category": "Web Development",
       "level": "Advanced",
       "duration": "24 weeks",
       "description": "Master full-stack development with MongoDB, Express.js, React, and Node.js.",
       "longDescription": "This intensive course covers the complete MERN stack (MongoDB, Express.js, React, and Node.js). You’ll learn to build modern, scalable, and dynamic web applications from scratch. The course includes backend APIs, frontend integration, authentication, and deployment to production servers.",
       "image": "https://images.unsplash.com/photo-1518770660439-4636190af475?auto=format&fit=crop&w=1000&q=80",
       "instructor": {
         "name": "Yamank Dhuriya",
         "bio": "Full-Stack Developer and Instructor with 8+ years of industry experience in JavaScript and web technologies",
         "image": "https://avatars.githubusercontent.com/u/148179853?v=4"
       },
       "rating": 4.8,
       "reviews": 2100,
       "students": 6800,
       "price": 79.99,
       "syllabus": [
         {
           "week": 1,
           "title": "HTML Basics",
           "goal": "Understand the structure of web pages and semantic markup.",
           "topics": [
             "HTML document structure (<!doctype>, <html>, <head>, <body>)",
             "Common tags: headings, paragraphs, lists, images, links",
             "Semantic elements: <header>, <nav>, <main>, <section>, <article>, <footer>",
             "Forms: <form>, inputs, labels, selects, buttons",
             "Basic accessibility (alt attributes, labels)"
           ],
           "miniProject": "Build a personal profile/portfolio page (static) with a contact form (no backend).",
           "practice": "Validate markup, use meaningful semantics, inspect with DevTools."
         },
         {
           "week": 2,
           "title": "CSS Fundamentals",
           "goal": "Learn styling fundamentals and layout basics.",
           "topics": [
             "Selectors, specificity, box model (margin/padding/border/content)",
             "Typography, colors, backgrounds",
             "CSS units (px, em, rem, %, vh/vw)",
             "Display types (block, inline, inline-block)",
             "Simple layout with floats and positioning"
           ],
           "miniProject": "Style your portfolio page (from Module 1) — header, hero, card sections.",
           "practice": "Make small style variations and use DevTools to experiment."
         },
         {
           "week": 3,
           "title": "Modern Layouts: Flexbox & Grid",
           "goal": "Build responsive layouts using modern layout systems.",
           "topics": [
             "Flexbox: container & children properties (justify, align, flex-grow/shrink)",
             "CSS Grid: rows/columns, areas, implicit vs explicit grid",
             "Responsive breakpoints, mobile-first approach",
             "Media queries and fluid sizing"
           ],
           "miniProject": "Create a responsive landing page with a 2-column layout that collapses on mobile."
         },
         {
           "week": 4,
           "title": "Advanced CSS & Responsive Design",
           "goal": "Make polished, responsive UIs.",
           "topics": [
             "Component styling (cards, buttons, forms)",
             "Transitions & basic animations",
             "CSS variables (custom properties)",
             "Accessibility visuals (focus states)",
             "Introduction to a utility CSS framework (e.g., Tailwind) optional"
           ],
           "miniProject": "Recreate a real landing page (e.g., a small SaaS landing) with responsive behavior."
         },
         {
           "week": 5,
           "title": "JavaScript Basics",
           "goal": "Understand core JavaScript language features.",
           "topics": [
             "Variables (let, const), types, operators",
             "Functions, block scope, control flow (if/for/while)",
             "Arrays & objects",
             "DOM basics: selecting elements, reading/writing content, attributes",
             "Event listeners and basic event handling"
           ],
           "miniProject": "Build a To-Do app (vanilla JS): add, delete, mark complete (store in localStorage)."
         },
         {
           "week": 6,
           "title": "Modern JavaScript (ES6+) & Async",
           "goal": "Use modern JS patterns and async code.",
           "topics": [
             "Arrow functions, destructuring, spread/rest",
             "Template literals, modules (import/export)",
             "Promises, async/await, fetch API",
             "Error handling (try/catch), JSON parsing"
           ],
           "miniProject": "Fetch data from a public API and display it (e.g., GitHub users or quotes). Add loading & error states."
         },
         {
           "week": 7,
           "title": "Tooling, Git & NPM",
           "goal": "Use dev tools and workflows used in real projects.",
           "topics": [
             "Git basics: repo, commits, branches, push/pull",
             "Node.js/npm: initializing projects, installing packages",
             "Module bundlers & dev server (create-react-app / Vite)",
             "Basic ESLint + Prettier setup"
           ],
           "miniProject": "Initialize a GitHub repo for your To-Do app and deploy a static version (Netlify/Vercel—optional)."
         },
         {
           "week": 8,
           "title": "React Fundamentals",
           "goal": "Build component-based UIs with React.",
           "topics": [
             "React components (functional), JSX syntax",
             "Props, state (useState)",
             "Rendering lists and keys",
             "Handling events in React",
             "Component composition & folder structure"
           ],
           "miniProject": "Convert the To-Do app to React."
         },
         {
           "week": 9,
           "title": "React Advanced",
           "goal": "Manage side effects, routing and forms.",
           "topics": [
             "useEffect, lifecycle equivalents",
             "React Router (routes, dynamic params)",
             "Controlled forms, validation basics",
             "Lifting state, passing callbacks",
             "Code splitting & lazy loading (basic)"
           ],
           "miniProject": "Build a small multi-page app (e.g., blog list → post detail) with React Router and fetch data."
         },
         {
           "week": 10,
           "title": "State Management & Patterns",
           "goal": "Scale React apps with shared/global state.",
           "topics": [
             "Context API (when to use)",
             "Introduction to Redux / Redux Toolkit or Zustand (pick one)",
             "Patterns: container vs presentational components, hooks for logic",
             "Optimizations: React.memo, useMemo, useCallback"
           ],
           "miniProject": "Add a global state (favorites/cart) to your app and persist it to localStorage."
         },
         {
           "week": 11,
           "title": "Node.js & Express Basics",
           "goal": "Create backend APIs to serve data.",
           "topics": [
             "Node.js runtime basics",
             "Express server, routes, middleware",
             "JSON responses, request parsing (bodyParser)",
             "CORS handling",
             "Basic project structure for an API"
           ],
           "miniProject": "Build a simple REST API for tasks (CRUD endpoints)."
         },
         {
           "week": 12,
           "title": "Databases with MongoDB & Mongoose",
           "goal": "Persist data with a NoSQL database.",
           "topics": [
             "MongoDB basics (documents, collections)",
             "Mongoose schema & models",
             "CRUD operations with Mongoose",
             "Validation, basic relationships (refs)",
             "Using MongoDB Atlas (cloud DB)"
           ],
           "miniProject": "Connect your Express API to MongoDB and persist the tasks."
         },
         {
           "week": 13,
           "title": "Authentication & Security",
           "goal": "Secure your app with user auth.",
           "topics": [
             "Password hashing with bcrypt",
             "JWT authentication (tokens, refresh tokens basics)",
             "Protected routes (middleware)",
             "Input validation & sanitization",
             "Basic security best practices (CORS, helmet, rate limiting)"
           ],
           "miniProject": "Add user signup/login to your API and protect task routes."
         },
         {
           "week": 14,
           "title": "Connecting Frontend & Backend (MERN Integration)",
           "goal": "Build full-stack features and integrate apps.",
           "topics": [
             "Calling your API from React (Axios/fetch)",
             "Handling auth tokens in frontend (storage, headers)",
             "File uploads (multer) basics",
             "Error handling & notifications",
             "Environment variables and config"
           ],
           "miniProject": "Build a full MERN CRUD app (e.g., notes, blog, or simple e-commerce) with auth and protected pages."
         },
         {
           "week": 15,
           "title": "Testing, Performance & Deployment",
           "goal": "Make apps production ready.",
           "topics": [
             "Basic testing: Jest + React Testing Library (unit & simple integration)",
             "Frontend performance tips (lazy load, asset sizes)",
             "Backend testing basics (supertest)",
             "Deployment: frontend (Netlify/Vercel), backend (Heroku/Render/Cloud), MongoDB Atlas",
             "CI/CD basics (GitHub Actions simple deployment)"
           ],
           "miniProject": "Deploy your MERN app to a cloud provider and verify end-to-end functionality."
         },
         {
           "week": 16,
           "title": "Advanced Topics & Capstone",
           "goal": "Add advanced features and finish a capstone project.",
           "topics": [
             "State management scaling (Redux Toolkit advanced)",
             "Server-side rendering / Next.js intro (optional)",
             "WebSockets (Socket.io) for real-time features",
             "Scalability & monitoring basics",
             "Final project planning, code review, README & presentation"
           ],
           "capstoneIdeas": [
             "Full e-commerce app (products, cart, checkout mock, admin panel)",
             "Social feed app with auth, likes, comments and real-time notifications",
             "Project management app (teams, tasks, file uploads, roles)"
           ],
           "deliverable": "A deployed, tested MERN application with README + demo."
         }
       ],
       "requirements": [
         "Basic knowledge of HTML, CSS, and JavaScript",
         "Familiarity with ES6+ syntax",
         "Computer with Node.js installed and internet access"
       ],
       "learningOutcomes": [
         "Build and deploy full-stack web applications using the MERN stack",
         "Design RESTful APIs and connect them with frontend apps",
         "Implement authentication and authorization in web apps",
         "Deploy production-ready applications on cloud platforms"
       ]
     
     
 },
 {
   "id": "mean",
   "path": "/course/mean",
   "title": "MEAN Stack Development",
   "category": "Web Development",
   "level": "Advanced",
   "duration": "24 weeks",
   "description": "Master full-stack development with MongoDB, Express.js, Angular, and Node.js.",
   "longDescription": "This comprehensive course covers the complete MEAN stack (MongoDB, Express.js, Angular, and Node.js). You’ll learn to build scalable, responsive, and dynamic applications with a robust backend and interactive frontend. The course includes REST APIs, Angular components, authentication, and cloud deployment.",
   "image": "https://images.unsplash.com/photo-1581091012184-5c1d9f36f06b?auto=format&fit=crop&w=1000&q=80",
   "instructor": {
     "name": "Priya Sharma",
     "bio": "Full-Stack Developer and Angular Specialist with 10+ years of experience building enterprise-grade applications.",
     "image": "https://randomuser.me/api/portraits/women/44.jpg"
   },
   "rating": 4.7,
   "reviews": 1800,
   "students": 5400,
   "price": 74.99,
   "syllabus": [
     {
       "week": 1,
       "title": "HTML & CSS Basics",
       "goal": "Get comfortable with semantic HTML and styling fundamentals.",
       "topics": ["HTML structure", "Forms & inputs", "Box model", "CSS selectors"],
       "miniProject": "Static company landing page."
     },
     {
       "week": 2,
       "title": "JavaScript Fundamentals",
       "goal": "Learn the building blocks of JavaScript.",
       "topics": ["Variables", "Functions", "DOM manipulation", "Events"],
       "miniProject": "Interactive image gallery."
     },
     {
       "week": 3,
       "title": "Angular Fundamentals",
       "goal": "Build dynamic frontends with Angular.",
       "topics": ["Angular CLI", "Components", "Templates & Data Binding", "Directives"],
       "miniProject": "Task tracker app with Angular."
     },
     {
       "week": 4,
       "title": "Advanced Angular",
       "goal": "Work with forms, services, and routing.",
       "topics": ["Reactive Forms", "HTTPClient", "Routing & Guards", "Lifecycle hooks"],
       "miniProject": "Multi-page Angular app with CRUD."
     },
     {
       "week": 5,
       "title": "Node.js & Express Basics",
       "goal": "Create backend APIs with Node.js and Express.",
       "topics": ["Express routes", "Middleware", "REST APIs"],
       "miniProject": "Simple REST API for blog posts."
     },
     {
       "week": 6,
       "title": "MongoDB with Mongoose",
       "goal": "Persist and query data with MongoDB.",
       "topics": ["Collections", "Schemas", "CRUD operations"],
       "miniProject": "Connect API to MongoDB for blog posts."
     },
     {
       "week": 7,
       "title": "Authentication & Security",
       "goal": "Secure apps with user login & JWT.",
       "topics": ["JWT Auth", "Password hashing", "Role-based access"],
       "miniProject": "User login & protected routes."
     },
     {
       "week": 8,
       "title": "Integration & Deployment",
       "goal": "Combine Angular frontend with Express backend.",
       "topics": ["CORS", "API consumption in Angular", "Deployment to cloud"],
       "miniProject": "Full MEAN CRUD app with authentication."
     }
   ],
   "requirements": [
     "Basic knowledge of HTML, CSS, and JavaScript",
     "Familiarity with ES6+ syntax"
   ],
   "learningOutcomes": [
     "Build scalable full-stack applications with Angular and Node.js",
     "Design REST APIs and connect them with frontend Angular apps",
     "Implement secure authentication and authorization",
     "Deploy MEAN stack applications on cloud platforms"
   ]
 },
 {
   "id": "fullstack-php",
   "path": "/course/fullstack-php",
   "title": "Full-Stack PHP Development",
   "category": "Web Development",
   "level": "Intermediate",
   "duration": "20 weeks",
   "description": "Learn to build full-stack applications using PHP, MySQL, and modern frontend technologies.",
   "longDescription": "This course teaches full-stack development with PHP for the backend, MySQL for databases, and modern frontend technologies (HTML, CSS, JavaScript). You’ll learn to create secure, dynamic, and database-driven applications, integrate APIs, handle authentication, and deploy to production servers.",
   "image": "https://images.unsplash.com/photo-1517433456452-f9633a875f6f?auto=format&fit=crop&w=1000&q=80",
   "instructor": {
     "name": "Rahul Verma",
     "bio": "Senior PHP Developer and Instructor with 9+ years of experience in PHP, MySQL, and full-stack web applications.",
     "image": "https://randomuser.me/api/portraits/men/55.jpg"
   },
   "rating": 4.6,
   "reviews": 1600,
   "students": 5100,
   "price": 64.99,
   "syllabus": [
     {
       "week": 1,
       "title": "HTML & CSS Fundamentals",
       "goal": "Understand the basics of structuring and styling web pages.",
       "topics": ["HTML structure", "Forms", "CSS selectors", "Box model"],
       "miniProject": "Personal profile page with styled sections."
     },
     {
       "week": 2,
       "title": "JavaScript Basics",
       "goal": "Learn client-side interactivity using JavaScript.",
       "topics": ["Variables", "Functions", "Events", "DOM manipulation"],
       "miniProject": "Interactive to-do list app."
     },
     {
       "week": 3,
       "title": "PHP Basics",
       "goal": "Get started with server-side programming using PHP.",
       "topics": ["PHP syntax", "Variables & arrays", "Forms & POST/GET", "Sessions & cookies"],
       "miniProject": "Simple contact form with PHP handling."
     },
     {
       "week": 4,
       "title": "MySQL & Databases",
       "goal": "Learn database fundamentals and integrate with PHP.",
       "topics": ["MySQL basics", "CRUD operations", "SQL queries", "PHP-MySQL integration"],
       "miniProject": "Guestbook app storing entries in MySQL."
     },
     {
       "week": 5,
       "title": "PHP with MVC Pattern",
       "goal": "Organize PHP apps with MVC architecture.",
       "topics": ["What is MVC?", "PHP frameworks (Laravel intro)", "Routing & controllers", "Views & models"],
       "miniProject": "Mini blog system with MVC."
     },
     {
       "week": 6,
       "title": "Advanced PHP & Security",
       "goal": "Enhance apps with authentication and secure coding.",
       "topics": ["Password hashing", "User login system", "Form validation", "SQL injection prevention"],
       "miniProject": "Secure login & registration system."
     },
     {
       "week": 7,
       "title": "REST APIs with PHP",
       "goal": "Build and consume REST APIs with PHP.",
       "topics": ["Creating APIs with PHP", "JSON responses", "Consuming APIs with JavaScript"],
       "miniProject": "Weather app consuming a public API with PHP backend."
     },
     {
       "week": 8,
       "title": "Deployment & Final Project",
       "goal": "Deploy PHP applications to cloud hosting.",
       "topics": ["Hosting PHP apps", "Using cPanel or VPS", "Environment variables", "Project deployment"],
       "miniProject": "Deploy a full-stack PHP CRUD app to the cloud."
     }
   ],
   "requirements": [
     "Basic knowledge of HTML, CSS, and JavaScript",
     "WAMP/XAMPP/LAMP stack installed on computer"
   ],
   "learningOutcomes": [
     "Build full-stack applications using PHP and MySQL",
     "Follow MVC architecture and work with a PHP framework",
     "Implement secure authentication and authorization",
     "Deploy PHP applications to production environments"
   ]
 },
 {
   "id": "python-programming",
   "path": "/course/python-programming",
   "title": "Python Programming",
   "category": "Programming",
   "level": "Beginner to Advanced",
   "duration": "16 weeks",
   "description": "Learn Python programming from basics to advanced with real-world projects.",
   "longDescription": "This course covers Python programming essentials, from syntax and data structures to object-oriented programming, file handling, libraries, and frameworks. By the end, learners will be able to build automation scripts, web apps, and data analysis projects.",
   "image": "https://images.unsplash.com/photo-1584697964194-031c84d24f6d?auto=format&fit=crop&w=1000&q=80",
   "instructor": {
     "name": "Anil Kumar",
     "bio": "Python Developer and Data Analyst with 7+ years of teaching and industry experience.",
     "image": "https://randomuser.me/api/portraits/men/62.jpg"
   },
   "rating": 4.9,
   "reviews": 2800,
   "students": 12000,
   "price": 89.99,
   "syllabus": [
     {
       "week": 1,
       "title": "Python Basics",
       "goal": "Get started with Python syntax and data types.",
       "topics": ["Python installation", "Variables", "Operators", "Input/Output"],
       "miniProject": "Simple calculator app."
     },
     {
       "week": 2,
       "title": "Data Structures",
       "goal": "Work with built-in collections.",
       "topics": ["Lists", "Tuples", "Dictionaries", "Sets"],
       "miniProject": "Student record system."
     },
     {
       "week": 3,
       "title": "Functions & OOP",
       "goal": "Write reusable code with functions and OOP.",
       "topics": ["Functions", "Classes", "Inheritance", "Polymorphism"],
       "miniProject": "Banking system in Python."
     },
     {
       "week": 4,
       "title": "File Handling & Libraries",
       "goal": "Use files and libraries effectively.",
       "topics": ["File read/write", "CSV/JSON", "NumPy intro", "Pandas intro"],
       "miniProject": "Data analyzer project."
     }
   ],
   "requirements": [
     "Basic computer knowledge",
     "No prior programming experience required"
   ],
   "learningOutcomes": [
     "Master Python syntax and data structures",
     "Build automation scripts and console apps",
     "Understand OOP concepts in Python",
     "Use libraries like NumPy and Pandas for data tasks"
   ]
 },
 {
   "id": "java-programming",
   "path": "/course/java-programming",
   "title": "Java Programming",
   "category": "Programming",
   "level": "Intermediate",
   "duration": "16 weeks",
   "description": "Learn Java programming from basics to advanced, covering OOP, collections, and GUI development.",
   "longDescription": "This Java course is designed for beginners and intermediate learners who want to master Java programming. It covers syntax, OOP concepts, exception handling, file handling, JDBC, and GUI programming. By the end, learners will be able to build console and desktop applications.",
   "image": "https://images.unsplash.com/photo-1555066931-4365d14bab8c?auto=format&fit=crop&w=1000&q=80",
   "instructor": {
     "name": "Rohit Mehra",
     "bio": "Senior Java Developer with 12+ years of experience in enterprise applications.",
     "image": "https://randomuser.me/api/portraits/men/45.jpg"
   },
   "rating": 4.7,
   "reviews": 1500,
   "students": 6000,
   "price": 89.99,
   "syllabus": [
     {
       "week": 1,
       "title": "Java Basics",
       "goal": "Get started with Java syntax and environment setup.",
       "topics": ["Java installation", "Syntax basics", "Data types", "Operators"],
       "miniProject": "Hello Java application."
     },
     {
       "week": 2,
       "title": "Control Structures & Arrays",
       "goal": "Learn decision-making and looping in Java.",
       "topics": ["if-else", "switch", "loops", "arrays"],
       "miniProject": "Student grade calculator."
     },
     {
       "week": 3,
       "title": "OOP in Java",
       "goal": "Understand object-oriented concepts.",
       "topics": ["Classes & objects", "Inheritance", "Polymorphism", "Encapsulation"],
       "miniProject": "Bank account management system."
     },
     {
       "week": 4,
       "title": "Exception Handling & File I/O",
       "goal": "Handle errors and work with files.",
       "topics": ["try-catch", "custom exceptions", "FileReader/Writer", "Serialization"],
       "miniProject": "Text file data processor."
     }
   ],
   "requirements": [
     "Basic programming knowledge helpful but not mandatory"
   ],
   "learningOutcomes": [
     "Strong understanding of Java syntax and OOP concepts",
     "Ability to handle exceptions and work with files",
     "Build console and desktop Java applications",
     "Knowledge of JDBC and collections framework"
   ]
 },
  
 {
   "id": "c-programming",
   "path": "/course/c-programming",
   "title": "C Programming",
   "category": "Programming",
   "level": "Beginner",
   "duration": "12 weeks",
   "description": "Learn the fundamentals of C programming, the foundation of many modern languages.",
   "longDescription": "This course covers the basics of C programming, including syntax, operators, control structures, arrays, functions, and pointers. Students will gain a solid foundation for understanding system-level programming and advanced languages like C++ and Java.",
   "image": "https://images.unsplash.com/photo-1581091870619-40a6f02e19f1?auto=format&fit=crop&w=1000&q=80",
   "instructor": {
     "name": "Sunil Yadav",
     "bio": "System Programmer and C Language Trainer with 10+ years of teaching experience.",
     "image": "https://randomuser.me/api/portraits/men/70.jpg"
   },
   "rating": 4.6,
   "reviews": 1700,
   "students": 6500,
   "price": 59.99,
   "syllabus": [
     {
       "week": 1,
       "title": "Introduction to C",
       "goal": "Learn the basics of C programming.",
       "topics": ["C syntax", "Variables", "Data types", "Operators"],
       "miniProject": "Basic arithmetic operations program."
     },
     {
       "week": 2,
       "title": "Control Structures",
       "goal": "Write programs with logic and flow control.",
       "topics": ["if-else", "switch-case", "loops (for, while, do-while)"],
       "miniProject": "Number guessing game."
     },
     {
       "week": 3,
       "title": "Arrays & Functions",
       "goal": "Work with arrays and reusable code.",
       "topics": ["1D/2D arrays", "Strings", "Functions"],
       "miniProject": "Student marks calculator."
     },
     {
       "week": 4,
       "title": "Pointers & File Handling",
       "goal": "Understand pointers and files in C.",
       "topics": ["Pointers basics", "Dynamic memory allocation", "File read/write"],
       "miniProject": "Mini file manager."
     }
   ],
   "requirements": [
     "Basic knowledge of computers"
   ],
   "learningOutcomes": [
     "Solid foundation in C programming",
     "Understanding of arrays, functions, and pointers",
     "Ability to build small C projects",
     "Preparation for C++ and system programming"
   ]
 }
]